#ifndef CUSTOM_LIGHT_INCLUDED
#define CUSTOM_LIGHT_INCLUDED

#define MAX_LIGHT_COUNT 4

CBUFFER_START(_CustomLight)
    int _LightCount;
    float4 _LightColors[MAX_LIGHT_COUNT];
    float4 _LightDirections[MAX_LIGHT_COUNT];
    float4 _LightPositions[MAX_LIGHT_COUNT];
    float4 _LightAttenuations[MAX_LIGHT_COUNT];
CBUFFER_END

struct Light {
    float3 color;
    float4 direction;
    float4 position;
    float4 attenuation;
};

int GetLightCount () {
	return _LightCount;
}

float3 GetLightDirection (Surface surface, Light light) {
    return normalize(light.direction.xyz * light.direction.w + light.position.xyz - surface.worldPosition * light.position.w);
}

float3 GetLightVector (Surface surface, Light light) {
    return light.direction.xyz * light.direction.w + light.position.xyz - surface.worldPosition * light.position.w;
}

float3 GetSpotDirection (Light light) {
    return light.direction.xyz * light.attenuation.y;
}

Light GetLight (int index) {
    Light light;
    light.color = _LightColors[index].rgb;
    light.position = _LightPositions[index];
    light.direction = _LightDirections[index];
    light.attenuation = _LightAttenuations[index];
    return light;
}

#endif
